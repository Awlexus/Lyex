<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://vinsearch.eurotaxglass.com/vin-intl"
                  targetNamespace="http://vinsearch.eurotaxglass.com/vin-intl">
    <types>
        <xs:schema targetNamespace="http://vinsearch.eurotaxglass.com/vin-intl" elementFormDefault="qualified"
                   attributeFormDefault="unqualified">
            <xs:simpleType name="MatchType">
                <xs:annotation><xs:documentation>Type of vehicle match.</xs:documentation></xs:annotation>
                <xs:restriction base="xs:integer">
                    <xs:enumeration value="1">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given technically matches with Autovista DB</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="2">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given technically matches but not available in Autovista DB at this market respect to Manufacturer date return</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="3">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given may contained one or more technical aspect not matching with Autovista DB</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="4">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given contained one or more technical aspect not matching  with Autovista DB</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="5">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given contained one or more technical aspect not matching  with Autovista DB</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="6">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given is matching with Autovista DB using most similar Technical aspects</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="7">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given did not find technical matches with Autovista DB but other descriptions of the vehicle are considered in the output proposed</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="8">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched and given used limited technical OEM codes &amp; descriptions with matches with Autovista DB</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="9">
                        <xs:annotation>
                            <xs:documentation>Vehicle searched did not find any similar in Autovista DB</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ISOcountryType">
                <xs:restriction base="xs:NMTOKEN">
                    <xs:enumeration value="AT"/>
                    <xs:enumeration value="BE"/>
                    <xs:enumeration value="CZ"/>
                    <xs:enumeration value="CH"/>
                    <xs:enumeration value="DE"/>
                    <xs:enumeration value="ES"/>
                    <xs:enumeration value="FI"/>
                    <xs:enumeration value="FR"/>
                    <xs:enumeration value="GR"/>
                    <xs:enumeration value="HR"/>
                    <xs:enumeration value="HU"/>
                    <xs:enumeration value="IT"/>
                    <xs:enumeration value="LU"/>
                    <xs:enumeration value="NL"/>
                    <xs:enumeration value="PL"/>
                    <xs:enumeration value="PT"/>
                    <xs:enumeration value="RO"/>
                    <xs:enumeration value="RS"/>
                    <xs:enumeration value="RU"/>
                    <xs:enumeration value="SK"/>
                    <xs:enumeration value="SI"/>
                    <xs:enumeration value="UK"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ISOlanguageType">
                <xs:restriction base="xs:NMTOKEN">
                    <xs:enumeration value="BG"/>
                    <xs:enumeration value="BR"/>
                    <xs:enumeration value="CA"/>
                    <xs:enumeration value="CS"/>
                    <xs:enumeration value="CZ"/>
                    <xs:enumeration value="DA"/>
                    <xs:enumeration value="DE"/>
                    <xs:enumeration value="EL"/>
                    <xs:enumeration value="EN"/>
                    <xs:enumeration value="ES"/>
                    <xs:enumeration value="ET"/>
                    <xs:enumeration value="FI"/>
                    <xs:enumeration value="FR"/>
                    <xs:enumeration value="GB"/>
                    <xs:enumeration value="HR"/>
                    <xs:enumeration value="HU"/>
                    <xs:enumeration value="IT"/>
                    <xs:enumeration value="LT"/>
                    <xs:enumeration value="LV"/>
                    <xs:enumeration value="NL"/>
                    <xs:enumeration value="NO"/>
                    <xs:enumeration value="PL"/>
                    <xs:enumeration value="PT"/>
                    <xs:enumeration value="RO"/>
                    <xs:enumeration value="RS"/>
                    <xs:enumeration value="RU"/>
                    <xs:enumeration value="SI"/>
                    <xs:enumeration value="SK"/>
                    <xs:enumeration value="SL"/>
                    <xs:enumeration value="SR"/>
                    <xs:enumeration value="SV"/>
                    <xs:enumeration value="TR"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="VersionType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="1.0.0"/>
                    <xs:enumeration value="1.1.0"/>
                    <xs:enumeration value="1.2.0"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="VinCodeType">
                <xs:annotation>
                    <xs:documentation>VIN Code</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:maxLength value="17"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ETGCodeType">
                <xs:restriction base="xs:string">
                    <xs:maxLength value="13"/>
                </xs:restriction>
            </xs:simpleType>
            <!-- All complex Types go here -->
            <xs:complexType name="VersionRequestInputType">
                <xs:sequence>
                    <xs:element name="Settings" type="tns:ETGsettingType"/>
                    <xs:element name="ServiceId" type="xs:string" minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>User- or Servicekey to identify caller. Used for billing and ACL
                                restrictions.
                                Format: COMPANY-APPLICATION-ENVIRONMENT-SECRET:SUFFIX
                                Where COMPANY,APPLICATION,SECRET delivered by ETG,
                                ENVIRONMENT - one of: proto,dev,test,preprod,live
                                SUFFIX - Optional any string, consists of letter,numbers or following chars: ".", "-", "
                                ", ","
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="VinDecodeInputType">
                <xs:sequence>
                    <xs:element name="Settings"
                                type="tns:ETGsettingType" maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Required field with request settings</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="VinCode" type="tns:VinCodeType"
                                maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>VIN to process</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="TypeETGCode" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                This field has to be used in a second
                                request using the same VIN to specify
                                one vehicle out of a former resulting
                                list of vehicles (SchwackeCode, NatCode, ETG Code)
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ExtendedOutput" type="xs:boolean"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                true = output of webservice will include
                                all defined technical fields of vehicle
                                and option descriptions; false = output
                                contains only the minimum of defined
                                fields
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="InputStream1" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Optional input stream which will be used
                                instead of calling the official
                                manufacturer VIN webservice. Format must
                                be identical to output of manufacturer
                                VIN webservice. Empty in normal case
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="InputStream2" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>the same as InputStream1</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ServiceCode" type="xs:int"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>change behavoiur of weservice itself or only logging part.
                                Request's variable "ServiceId" should allow setting ServiceCode

                                SERVICECODE_ERROR = 1; // bad failures, exceptions and so on
                                SERVICECODE_WARNING = 2; // not very bad failures, that can change result
                                SERVICECODE_NOCACHE = 32; // do not use local cache
                                SERVICECODE_NOREQUEST = 64; // do not request remote servers
                                SERVICECODE_DEBUG_INOUT = 128; // show incoming request / outgoing result
                                SERVICECODE_DEBUG_FUNC1 = 256; // show only main functions call/return
                                SERVICECODE_DEBUG_FUNC2 = 512; // show only middle functions call/return
                                SERVICECODE_DEBUG_FUNC3 = 1024; // show only small functions call/return
                                SERVICECODE_DEBUG_NET = 2048; // network/disk/cache IO
                                SERVICECODE_DEBUG_SQL = 4096; // SQL queries
                                SERVICECODE_INFO1 = 8192; // Program workflow (less debug)
                                SERVICECODE_INFO2 = 16384; // Program workflow (more debug)
                                SERVICECODE_INFO3 = 32768; // Program workflow (more debug)
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ValuationData"
                                type="tns:ValuationBasicType" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Valuation of vehicle can be done by filling this structure. If it's empty
                                - no valuation will be proceed
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ExpectedMakeId" type="xs:short"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                EurotaxGlass's MakeId which is the
                                EXPECTED value of the caller after
                                decoding the VIN.

                                The webservice will only continue if the
                                ExpectedMakeId is equal to the decoded
                                MakeId based on the VIN decoder phase 1,
                                otherwise it returns failure. This is important
                                if you want to ensure that no call to
                                the manufacturer is made until the VIN
                                is part of the EXPECTED
                                Manufacturer/MakeId.

                                This feature is also useful for the
                                client to compare a pre-selected Make
                                (ETG based) with the decoded Make based
                                on the VIN without the need to implement
                                the VIN decode logic (step 1) by itself.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ServiceId" type="xs:string" minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>User- or Servicekey to identify caller. Used for billing and ACL
                                restrictions.
                                Format: COMPANY-APPLICATION-ENVIRONMENT-SECRET:SUFFIX
                                Where COMPANY,APPLICATION,SECRET delivered by ETG,
                                ENVIRONMENT - one of: proto,dev,test,preprod,live
                                SUFFIX - Optional any string, consists of letter,numbers or following chars: ".", "-", "
                                ", ","
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EQBehavior" maxOccurs="1"
                                minOccurs="0" type="xs:short">
                        <xs:annotation>
                            <xs:documentation>Change the internal equipment behavior,
                                if there is more then one clearly result
                                this flag decides which result to use.

                                0 = Behavior as today, no change in equipment logic.
                                1 = Return the cheapest equipment.
                                2 = Return the expensive equipment.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="VinDecodeOutputType">
                <xs:sequence>
                    <xs:element name="Settings" type="tns:ETGsettingType"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Settings, which VinSearch used to process this VIN
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="VinCode" type="tns:VinCodeType"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>VIN Code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Vehicle" type="tns:VehicleType"
                                minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>
                                Array with vehicles, which are found
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Equipment" type="tns:EquipmentType"
                                minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>
                                Equipment, found via direct in-country mapping
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Esaco" type="tns:EsacoType"
                                maxOccurs="unbounded" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Esacos, extracted from field "Equipment"
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="StatusCode" type="xs:short"
                                maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>
                                0 - No error; 1 - Catastrophic Internal Network/Server Error; 2 - Unable to access OEM
                                data; 3 - IUnable to interpret the OEM response or VIN not found; 4 – Unable to match
                                OEM VIN data to internal data; 5 – Issue with the VIN Request; 999 - Unexpected Error;
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="StatusMsg" type="xs:string"
                                minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>
                                description of error
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DebugOutput" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Error tag for later investigtion of problems
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="extEquipment"
                                type="tns:EquipmentType" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>
                                Equipment, found via cross-country mapping
                                (reference market). Not always perfect
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="extEsaco" type="tns:EsacoType"
                                maxOccurs="unbounded" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Esacos, extracted from extEquipment
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ValuationResponse"
                                type="tns:ValuationResponseType" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Valuation values</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DetectedMakeId" type="xs:short"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                EurotaxGlass's MakeId which is DETECTED after
                                decoding the VIN.

                                This is useful for the client to compare a
                                pre-selected Make (ETG data based) with the decoded
                                Make based on the VIN without the need to implement
                                the VIN decode logic by itself.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ManufOriginData"
                                type="tns:ManufacturerInfoType" maxOccurs="unbounded"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Structure of original Manufacturer Equipment Answer
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ManufUnknownEquipment"
                                type="tns:ManufacturerInfoType" maxOccurs="unbounded"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Equipment, which cannot be detected or parsed by
                                VinSearch engine
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ProductionDate" type="xs:date"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Production date of vehicle, if available
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DeliveryDate" type="xs:date"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Delivery date, if available If not available,
                                RegistrationDate, SellDate or similar date will be
                                used, if available
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="RegistrationDate" type="xs:date" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Registration Date of Vehicle, used in internal mapping (e.g. VehicleType,
                                EquipmentOptions).
                                If not delivered by Manufacturer, one of DeliveryDate or ProductionDate will be used.
                                It can be changed by the system to the nearest border of Vehicle->PeriodOfBuild Dates if
                                original RegistrationDate was out of the borders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ColourDescription" type="xs:string" maxOccurs="1"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Text description of colour, returned by Manufacturer
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ColourCode" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                    </xs:element>
                    <xs:element name="UpholsteryDescription"
                                type="xs:string" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Text description of colour, returned by Manufacturer
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="UpholsteryCode" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                    </xs:element>
                    <xs:element name="TopDescription" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Description of Top Colour, returned by Manufacturer
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="TopCode" type="xs:string" maxOccurs="1"
                                minOccurs="0">
                    </xs:element>
                    <xs:element name="EngineCode" type="xs:string" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Engine Code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="GearboxCode" type="xs:string" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Gearbox Code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="TransmissionCode" type="xs:string" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Transmission Code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DeliveryCountry" type="tns:ISOcountryType" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>ISO country code of delivery market</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="VOC" type="xs:string" maxOccurs="1" minOccurs="0"></xs:element>
                    <xs:element name="VOC2" type="xs:string" maxOccurs="1" minOccurs="0"></xs:element>
                    <xs:element name="ModelYear" type="xs:int"
                                maxOccurs="1" minOccurs="0">
                    </xs:element>
                    <xs:element name="MatchType" type="tns:MatchType" minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Type of vehicle match.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="VehicleType">
                <xs:annotation>
                    <xs:documentation>Manufacturer data decoded from the VIN code</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TypeETGCode" type="xs:string"
                                minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>ETG Code (SchwackeCode, NatCode) of found vehicle</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="MakeDescription" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Description of manufacturer</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ModelDescription" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Description of model
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="VehType" type="xs:string"
                                minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>ETG Vehicle Type Code of found vehicle</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="TypeDescription" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>description of type of model
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EngineSize" type="xs:short"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>engine size in ccm
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EnginePS" type="xs:short"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>engine power in PS</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EngineKW" type="xs:short"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>engine power in KW</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PeriodOfBuild" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>when this model were produced</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="FuelType" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Fuel type</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="BodyType" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>body type (limousine, cabrio, etc..)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="NumberDoors" type="xs:short"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>number of doors</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="NumberGears" type="xs:short"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>number of gears</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="GearType" type="xs:string"
                                minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Gearbox type (automatic, manual)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PeriodOfBuildDetails"
                                type="tns:PeriodOfBuildDetailsType" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                The Period of build using dedicated
                                fields for month and year instead of
                                string (see also "PeriodOfBuild"). If
                                PoBUntilMonth and -Year is missing, the
                                vehicle is still build without a actual
                                limitation from manufacturer.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PriceNetto" type="xs:decimal"
                                minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Price of new vehicle in the production time</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PriceBrutto" type="xs:decimal" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Price of new vehicle in the production time</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ETGsettingType">
                <xs:annotation>
                    <xs:documentation>Settings for country, language, response format etc.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="ISOcountryCode" type="tns:ISOcountryType" minOccurs="1" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>ISO country code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ISOlanguageCode" type="tns:ISOlanguageType" maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>ISO language code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="CheckForIddLoadFlag" type="xs:int" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Flags whether to check if an IDD load is in progress before executing
                                search. 1 if check is requested.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ETGversionInformationType">
                <xs:sequence>
                    <xs:element name="Settings" type="tns:ETGsettingType"/>
                    <xs:element name="ServiceVersion" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Version of program</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="IntelligenceVersion" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Version of mapping logic</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataReleaseDate" type="tns:ETGdateType">
                        <xs:annotation>
                            <xs:documentation>Version of IDD data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <!-- We do not use version number in data release -->
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ETGdateType">
                <xs:annotation>
                    <xs:documentation>Common data type for date representation</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="Day" type="xs:gDay" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>day of the month</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Month" type="xs:gMonth">
                        <xs:annotation>
                            <xs:documentation>month</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Year" type="xs:gYear">
                        <xs:annotation>
                            <xs:documentation>year</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LoginDataType">
                <xs:sequence>
                    <xs:element name="Name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>ETG-wide unique user name</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Password" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>User password</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="OriginatorType">
                <xs:sequence>
                    <xs:element name="Signature" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>ETG-wide unique user ID / user signature</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="LoginData" type="tns:LoginDataType">
                        <xs:annotation>
                            <xs:documentation>User authentication data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FailureType">
                <xs:sequence>
                    <xs:element name="ETGError" type="tns:ETGStatus"/>
                    <xs:element name="ETGWarning" type="tns:ETGStatus" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SuccessType">
                <xs:sequence minOccurs="0">
                    <xs:element name="ETGWarning" type="tns:ETGStatus" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ResponseType">
                <xs:sequence>
                    <xs:element name="VersionResponse" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Version of global ETG services specification used to construct the
                                response
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Statistics" type="tns:StatisticsType"/>
                    <xs:choice>
                        <xs:element name="Failure" type="tns:FailureType">
                            <xs:annotation>
                                <xs:documentation>Indicates that the processing of this request has failed, and provides
                                    error and optional warning messages that arose during the processing.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Success" type="tns:SuccessType">
                            <xs:annotation>
                                <xs:documentation>Indicates that the processing of this request has succeeded; may
                                    provide non-fatal warning messages that arose during the processing.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="StatisticsType">
                <xs:sequence>
                    <xs:element name="StartDateTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Processing start timestamp</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EndDateTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Processing finish timestamp</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ETGStatus">
                <xs:annotation>
                    <xs:documentation>Placeholder for general status report. To be filled out before sending a response
                        back to the originator.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="Code" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Top level error or warning code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Description" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Top level error or warning description</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ExtCode" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Extended error or warning code. Can be service specific</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ExtDescription" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Extended error or warning description.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ETGHeaderType">
                <xs:sequence>
                    <xs:element name="VersionRequest" type="tns:VersionType"/>
                    <xs:element name="Originator" type="tns:OriginatorType"/>
                    <xs:element name="Response" type="tns:ResponseType" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ETGHeader" type="tns:ETGHeaderType"/>
            <xs:element name="Settings" type="tns:ETGsettingType">
                <xs:annotation>
                    <xs:documentation>Settings for country (market), language, response format etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="VersionInformation" type="tns:ETGversionInformationType"/>
            <xs:element name="VersionRequest" type="tns:VersionRequestInputType"/>
            <xs:element name="Request" type="tns:VinDecodeInputType"/>
            <xs:element name="Result" type="tns:VinDecodeOutputType"/>
            <xs:complexType name="EquipmentType">
                <xs:sequence>
                    <xs:element name="ManufCode" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Manufacturer internal code (ordercode)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="SoaCode" type="xs:int"
                                maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Soa Code (SA Code, ETG EQ Code) of this equipment</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DeliveryFlag" maxOccurs="1"
                                minOccurs="0" type="xs:short">
                        <xs:annotation>
                            <xs:documentation>
                                0 - Standart / serial equipment; 1 -
                                Standart option / free; 2 - Option at
                                extra charge; 3 - Option price not
                                given; 4 - Option not available yet; 5 -
                                Mandatory at extra charge;
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PriceNetto" type="xs:decimal"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Price of option in production time</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PriceBrutto" type="xs:decimal" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Price of option in production time</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Begin" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Period of build</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="End" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Period of build</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="PackageFlag" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>1 - this equipment is a package of other equipments
                                0 - stand-alone equipment
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Merchantability" type="xs:short"
                                minOccurs="0" maxOccurs="1">
                        <xs:annotation>
                            <xs:documentation>merchantability</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Description" type="xs:string"
                                maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>description of equipment</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Esaco" type="tns:EsacoType"
                                maxOccurs="unbounded" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Esaco codes of this equipment</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EsacoType">
                <xs:sequence>
                    <xs:element name="Code" type="xs:string"
                                maxOccurs="unbounded" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Esaco code</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Desc" type="xs:string" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Esaco Description</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ValuationBasicType">
                <xs:sequence>
                    <xs:element name="FirstRegYear" type="xs:short">
                        <xs:annotation>
                            <xs:documentation>Registration year of vehicle. required only if valuation should be done
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="FirstRegMonth" type="xs:short">
                        <xs:annotation>
                            <xs:documentation>Registration month of vehicle. required only if valuation should be done
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="KilometersDriven" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>KM. required only if valuation should be done</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ValuationResponseType">
                <xs:sequence>
                    <xs:element name="TradeAmount" type="xs:double" maxOccurs="1" minOccurs="0"></xs:element>
                    <xs:element name="RetailAmount" type="xs:double" maxOccurs="1" minOccurs="0"></xs:element>
                    <xs:element name="AverageMileage" type="xs:int" maxOccurs="1" minOccurs="0"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PeriodOfBuildDetailsType">
                <xs:sequence>
                    <xs:element name="PoBFromMonth" type="xs:short" maxOccurs="1" minOccurs="1"></xs:element>
                    <xs:element name="PoBFromYear" type="xs:short" maxOccurs="1" minOccurs="1"></xs:element>
                    <xs:element name="PoBUntilMonth" type="xs:short" maxOccurs="1" minOccurs="0"></xs:element>
                    <xs:element name="PoBUntilYear" type="xs:short" maxOccurs="1" minOccurs="0"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ManufacturerInfoType">
                <xs:sequence>
                    <xs:element name="OrderCode" type="xs:string" maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Original order code of equipment of manufacturer</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EquipmentDesc" type="xs:string" maxOccurs="1" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>Original equipment description of manufacturer</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="GetCache">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ServiceCode" type="xs:int" maxOccurs="1" minOccurs="0">
                        </xs:element>
                        <xs:element name="ServiceId"
                                    type="xs:string" maxOccurs="1" minOccurs="1">
                            <xs:annotation>
                                <xs:documentation>Please check field ServiceId in method 'Decode'</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="GetCacheResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="vins" type="tns:VinCodeType"
                                    maxOccurs="unbounded" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Vins in cache</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="StatusMsg" type="xs:string"
                                    maxOccurs="1" minOccurs="0">
                        </xs:element>
                        <xs:element name="StatusCode"
                                    type="xs:int" maxOccurs="1" minOccurs="0">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="GetLog">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="in" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="GetLogResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="out" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="GetMarkets">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ServiceId"
                                    type="xs:string" maxOccurs="1" minOccurs="1">
                            <xs:annotation>
                                <xs:documentation>Please check field ServiceId in method 'Decode'</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="GetMarketsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Market"
                                    type="tns:ETGsettingType" maxOccurs="unbounded" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>market description</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="StatusCode" type="xs:short"
                                    maxOccurs="1" minOccurs="1">
                        </xs:element>
                        <xs:element name="StatusMsg"
                                    type="xs:string" maxOccurs="1" minOccurs="1">
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    </types>
    <wsdl:message name="ServiceHeader">
        <wsdl:part name="etg_header" element="tns:ETGHeader"/>
    </wsdl:message>
    <wsdl:message name="VinDecodeRequest">
        <wsdl:part name="vinRequest" element="tns:Request"/>
    </wsdl:message>
    <wsdl:message name="VinDecodeResponse">
        <wsdl:part name="vinResult" element="tns:Result"/>
    </wsdl:message>
    <wsdl:message name="GetVersionRequest">
        <wsdl:part name="versionRequest" element="tns:VersionRequest"/>
    </wsdl:message>
    <wsdl:message name="GetVersionResponse">
        <wsdl:part name="versionInformation" element="tns:VersionInformation"/>
    </wsdl:message>
    <wsdl:message name="GetCacheRequest">
        <wsdl:part name="GetCache" element="tns:GetCache"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetCacheResponse">
        <wsdl:part name="GetCacheResponse" element="tns:GetCacheResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetLogRequest">
        <wsdl:part name="parameters" element="tns:GetLog"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetLogResponse">
        <wsdl:part name="parameters" element="tns:GetLogResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetMarketsRequest">
        <wsdl:part name="parameters" element="tns:GetMarkets"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetMarketsResponse">
        <wsdl:part name="parameters" element="tns:GetMarketsResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:portType name="vinsearchSoapPort">
        <wsdl:operation name="VinDecode">
            <wsdl:documentation>Main function to map VIN code to ETG dat</wsdl:documentation>
            <wsdl:input message="tns:VinDecodeRequest"/>
            <wsdl:output message="tns:VinDecodeResponse"/>
        </wsdl:operation>
        <wsdl:operation name="GetVersion">
            <wsdl:documentation>Get version of Program, interne logic, IDD Dat</wsdl:documentation>
            <wsdl:input message="tns:GetVersionRequest"/>
            <wsdl:output message="tns:GetVersionResponse"/>
        </wsdl:operation>
        <wsdl:operation name="GetCache">
            <wsdl:documentation>Internal function to fetch cached VINs. ServiceCode field dependend.
            </wsdl:documentation>
            <wsdl:input message="tns:GetCacheRequest"></wsdl:input>
            <wsdl:output message="tns:GetCacheResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetMarkets">
            <wsdl:documentation>Get markets, available in VinSearch</wsdl:documentation>
            <wsdl:input message="tns:GetMarketsRequest"></wsdl:input>
            <wsdl:output message="tns:GetMarketsResponse"></wsdl:output>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="vinsearchBinding" type="tns:vinsearchSoapPort">
        <soap:binding style="document"
                      transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="VinDecode">
            <soap:operation
                    soapAction="http://vinsearch.eurotaxglass.com/vin-intl/VinDecode"/>
            <wsdl:input>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetVersion">
            <soap:operation
                    soapAction="http://vinsearch.eurotaxglass.com/vin-intl/GetVersion"/>
            <wsdl:input>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetCache">
            <soap:operation
                    soapAction="http://vinsearch.eurotaxglass.com/vin-intl/GetCache"/>
            <wsdl:input>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetMarkets">
            <soap:operation
                    soapAction="http://vinsearch.eurotaxglass.com/vin-intl/GetMarkets"/>
            <wsdl:input>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:header use="literal" part="etg_header" message="tns:ServiceHeader"/>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="VinSearch">
        <wsdl:port name="vinsearch" binding="tns:vinsearchBinding">
            <soap:address location="http://vinsearch.eurotaxglass.com/vin-intl/"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
